max_obstacle_height: 1.6  # assume something like an arm is mounted on top of the robot

# Obstacle Cost Shaping (http://wiki.ros.org/costmap_2d/hydro/inflation)
robot_radius: 0.20  # distance a circular robot should be clear of the obstacle (kobuki: 0.18)
# footprint: [[x0, y0], [x1, y1], ... [xn, yn]]  # if the robot is not circular
footprint: [
            [0.158, 0.158], # Front side left
            [0.158, -0.158], # Front side right
            [-0.158, -0.158], # Back right
            [-0.158, 0.158] # Back left
          ]

map_type: voxel

obstacle_layer:
  enabled:              true
  max_obstacle_height:  1.6
  origin_z:             0.0
  z_resolution:         0.2
  z_voxels:             8
  unknown_threshold:    16
  mark_threshold:       0
  combination_method:   1
  track_unknown_space:  false    #true needed for disabling global path planning through unknown space
  obstacle_range: 2.5
  raytrace_range: 3.0
  publish_voxel_map: false
  observation_sources:  scan rgbd #obstacle 
  scan:
    data_type: LaserScan
    topic: scan
    marking: true
    clearing: true
    inf_is_valid: true
    observation_persistence: 0.0
    min_obstacle_height: 0.00
    max_obstacle_height: 0.40
  rgbd:
    data_type: PointCloud2
    sensor_frame : base_footprint
    topic: cloud_noise_removal
    marking: true
    clearing: true
    inf_is_valid: false
    observation_persistence: 0.0
    min_obstacle_height: 0.0
    max_obstacle_height: 1.6
    obstacle_range: 2.5
    raytrace_range: 3.0
  # rgbd:
  #   data_type: PointCloud2
  #   topic: k4a/points2
  #   marking: true
  #   clearing: true
  #   inf_is_valid: true
  #   observation_persistence: 0.0
  #   min_obstacle_height: 0.2
  #   max_obstacle_height: 1.5
  # obstacle:
  #   data_type: PointCloud2
  #   topic: point_cloud_object_detection/cloud_object
  #   marking: true
  #   clearing: false
  #   min_obstacle_height: 0.0
  #   max_obstacle_height: 1.0
  # for debugging only, let's you see the entire voxel grid

#cost_scaling_factor and inflation_radius were now moved to the inflation_layer ns
inflation_layer:
  enabled:              true
  cost_scaling_factor:  10.0  # exponential rate at which the obstacle cost drops off (default: 10)
  inflation_radius:     0.5  # max. distance from an obstacle at which costs are incurred for planning paths.

static_layer:
  enabled:              true
  

